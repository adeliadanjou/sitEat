{"version":3,"sources":["auth/AuthService.js","Components/Home/Home.js","Components/Login/Login.js","Components/Restaurant/Restaurant.js","Components/Signup/Signup.js","Components/Map/Map.js","Components/AllRestaurants/AllRestaurants.js","Components/Profile/Profile.js","Components/Edit/Edit.js","App.js","serviceWorker.js","index.js"],"names":["AuthService","_this","this","Object","classCallCheck","signup","username","password","email","restaurant","restaurantName","address","zipCode","service","post","then","response","data","edit","loggedin","get","login","logout","allRestaurants","axios","create","baseURL","concat","process","withCredentials","Home","props","possibleConstructorReturn","getPrototypeOf","call","state","loggedInUser","react_default","a","createElement","Link","to","Component","Login","handleFormSubmit","event","preventDefault","setState","redirect","getUser","catch","error","messageE","handleChange","_event$target","target","name","value","defineProperty","mesaggeE","_this2","Redirect","onSubmit","type","onChange","e","Signup","lat","lng","objectSpread","console","log","checked","justForRestaurants","GoogleMapsContainer","onMarkerClick","marker","selectedPlace","activeMarker","showingInfoWindow","onMapClick","bind","assertThisInitialized","dist","item","style","width","height","google","onClick","zoom","initialCenter","title","position","visible","React","GoogleApiWrapper","apiKey","AllRestaurants","allRestaurantsHere","search","authService","substr","_this3","RestaurantName","filter","toLowerCase","includes","map","_id","id","placeholder","updateSearch","Profile","componentDidMount","getTheUser","user","restaurantProfile","Map","userProfile","AllRestaurants_AllRestaurants","Edit","App","fetchUser","userObj","className","Switch","Route","exact","path","component","render","Components_Login_Login","Components_Signup_Signup","Profile_Profile_Profile","Components_Edit_Edit","Restaurant_restaurant","Boolean","window","location","hostname","match","ReactDOM","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fd5a8325.chunk.js","sourcesContent":["import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: `${process.env.REACT_APP_API_URL}/auth`,\n      withCredentials: true\n    });\n    this.service = service;\n  }\n\n  signup = (username, password, email, restaurant, restaurantName, address, zipCode) => {\n    return this.service.post('/signup', {username, password, email, restaurant, restaurantName, address, zipCode })\n    .then(response => response.data)\n  }\n\n  edit = (username, email, restaurant, restaurantName, address, zipCode) => {\n    return this.service.post('/edit', {username, email, restaurant, restaurantName, address, zipCode })\n    .then(response => response.data)\n  }\n\n  loggedin = () => {\n    return this.service.get('/loggedin')\n    .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', {username, password})\n    .then(response => response.data)\n  }\n  \n  logout = () => {\n    return this.service.get('/logout')\n    .then(response => response.data)\n  }\n// me hago el servicio de todos los restaurantes con su ruta modo react para llamarla luego en componente\n  allRestaurants = () => {\n    return this.service.get('/allRestaurants', {})\n    .then(response => response.data)\n  }\n\n}\n\nexport default AuthService;","import { Link } from \"react-router-dom\";\nimport React, { Component } from 'react'\nimport AuthService from '../../auth/AuthService';\n\n \nclass Home extends Component {\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null };\n    this.service = new AuthService();\n   \n  }\n  render () {\n      \n    return (\n      <div>\n        <h1>Welcome Home {this.props.username}</h1>\n        <Link to={`/login/`}><button>login</button></Link>\n        <Link to={`/signup/`}><button>signup</button></Link>\n      </div>\n        \n     )\n}\n}\n      \n        export default Home;","import React, { Component } from 'react';\nimport AuthService from '../../auth/AuthService';\nimport { Link, Redirect} from 'react-router-dom';\n\nclass Login extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', redirect: false, mesaggeE: '' };\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username = this.state.username;\n    const password = this.state.password;\n\n    this.service.login(username, password)\n    .then( response => {\n        this.setState({ username: \"\", password: \"\",  redirect: true});\n        this.props.getUser(response)\n    })\n    .catch( error => this.setState({messageE:\"Usuario o Contraseña incorrecto\"} ))\n  }\n    \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    this.setState({[name]: value});\n  }\n    \n  render(){\n    if(this.state && this.state.redirect) {\n      return <Redirect to=\"/profile\" />\n    }\n    return(\n      <div>\n        \n       <p>{this.state.messageE}</p> \n        \n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          <label>Password:</label>\n          <textarea name=\"password\" type=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n          \n          <input type=\"submit\" value=\"Login\" />\n        </form>\n        <p>Don't have account? \n            <Link to={\"/signup\"}> Signup</Link>\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Login;","import React, { Component } from 'react'\n\nexport default class restaurant extends Component {\n  render() {\n    return (\n      <div>\n        restaurantes\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../../auth/AuthService';\nimport { Link, Redirect } from 'react-router-dom'; \n\n\nclass Signup extends Component {\n  constructor(props){\n    super(props);\n    this.state = { username: '', password: '', email: '', restaurantName: '', address: '', zipCode: '', lat: '', lng: '', redirect: false};\n    this.service = new AuthService();\n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    const username         = this.state.username;\n    const password         = this.state.password;\n    const email            = this.state.email;\n    const restaurant       = this.state.restaurant;\n    const restaurantName   = this.state.restaurantName;\n    const address          = this.state.address;\n    const zipCode          = this.state.zipCode;\n    const lat              = this.state.lat;\n    const lng              = this.state.lng;\n\n    this.service.signup(username, password, email, restaurant, restaurantName, address, zipCode, lat, lng)\n    .then( response => {\n        this.setState({\n            ...this.state,\n            username: \"\", \n            password: \"\",\n            email: \"\",\n            restaurant: false,\n            restaurantName: \"\",\n            address: \"\",\n            zipCode: \"\",\n            lat: \"\",\n            lng: \"\",\n\n            redirect: true\n        });\n        this.props.getUser(response)\n\n    })\n    .catch( error => console.log(error),  )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    if(name === \"restaurant\"){\n     this.setState({[name]: event.target.checked});\n    }\n    else{\n      this.setState({[name]: value});\n    }\n\n  }\n\n  render(){\n    if(this.state && this.state.redirect) {\n      return <Redirect to=\"/\" />\n    }\n    if(this.state.restaurant === true){\n         var justForRestaurants =(\n         <div>\n          <label>Restaurant Name:</label>\n          <input name=\"restaurantName\" value={this.state.restaurantName} onChange={ e => this.handleChange(e)} />\n\n          <label>Address:</label>\n          <input name=\"address\" value={this.state.address} onChange={ e => this.handleChange(e)} />\n\n          <label>Zip Code:</label>\n          <input name=\"zipCode\" value={this.state.zipCode} onChange={ e => this.handleChange(e)} />\n         \n         </div>\n         ) \n     \n    }\n    return(\n      <div>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n          \n          <label>Password:</label>\n          <input name=\"password\" value={this.state.password} onChange={ e => this.handleChange(e)} />\n\n          <label>Email:</label>\n          <input name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)} />\n          \n\n          <input type=\"checkbox\" name=\"restaurant\" value={this.state.restaurant} onChange={ e => this.handleChange(e)}/> \n          <label>Soy un restaurante</label>\n        {justForRestaurants}\n      \n          <input type=\"submit\" value=\"Signup\" />\n        </form>\n  \n        <p>Already have account? \n            <Link to={\"/login\"}> Login</Link>\n        </p>\n  \n      </div>\n    )\n  }\n  \n}\n\nexport default Signup;\n","// import React, { Component } from \"react\";\n// import { Map, Marker, GoogleApiWrapper } from \"google-maps-react\";\n\n\n\n// class Maps extends Component {\n  \n//   render() {\n//     const style = {\n//       width: '100%',\n//       height: '100%'\n//     }\n\n//     return (\n//       <div className=\"mapFather\">\n       \n//         <Map google={this.props.google} \n//          style={style}\n//         Center={{\n//           lat: this.props.lat,\n//           lng: - this.props.lng,\n//         }}\n//         zoom={15}\n//         onClick={this.mapClicked}>\n\n    \n//         <Marker onClick={this.onMarkerClick} name={\"Current location\"} />\n        \n//         </Map>\n//       </div>\n//     );\n//   }\n// }\n\n// export default GoogleApiWrapper({\n//   apiKey: (\"AIzaSyBp_NABj80aoBJsjKpHT6q7I1c9lLYB3gk\")\n// })(Maps)\n\n\nimport React from 'react';\nimport { GoogleApiWrapper, InfoWindow, Map, Marker } from 'google-maps-react';\n\n\nclass GoogleMapsContainer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {}\n    }\n    // binding this to event-handler functions\n    this.onMarkerClick = this.onMarkerClick.bind(this);\n    this.onMapClick = this.onMapClick.bind(this);\n  }\n  onMarkerClick = (props, marker, e) => {\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n  }\n  onMapClick = (props) => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      });\n    }\n  }\n  render() {\n    const style = {\n  \n      width: '50vw',\n      height: '75vh',\n      \n    }\n    return (\n      <Map\n        item\n        \n        style = { style }\n        google = { this.props.google }\n        onClick = { this.onMapClick }\n        zoom = { 18 }\n        initialCenter = {{ lat: this.props.lat-0.00097, lng: this.props.lng-0.00093 }}\n      >\n        <Marker\n          onClick = { this.onMarkerClick }\n          title = { 'Changing Colors Garage' }\n          position = {{ lat: this.props.lat-0.00097, lng: this.props.lng-0.00093 }}\n          name = { 'Changing Colors Garage' }\n        />\n        <InfoWindow\n          marker = { this.state.activeMarker }\n          visible = { this.state.showingInfoWindow }\n        >\n          \n        \n        </InfoWindow>\n      </Map>\n    );\n  }\n}\nexport default GoogleApiWrapper({\n  apiKey: (\"AIzaSyBp_NABj80aoBJsjKpHT6q7I1c9lLYB3gk\")\n})(GoogleMapsContainer)","import React, { Component } from 'react'\nimport AuthService from '../../auth/AuthService';\nimport { Link } from 'react-router-dom'; \n\n\nexport default class AllRestaurants extends Component {\n  constructor(props){\n    super(props)\n    this.state = { allRestaurantsHere: null, search: '' };\n    this.authService = new AuthService();\n  }\n\n  componentDidMount() {\n        this.authService\n    .allRestaurants()\n    .then(allRestaurantsHere => this.setState({ ...this.state, allRestaurantsHere })\n    )\n  }\n\n  updateSearch(event){\n    this.setState({search: event.target.value.substr(0,15)})\n  }\n\n\n  render(){\n    \n\n if(this.state.allRestaurantsHere){\n   let filteredRestaurants= this.state.allRestaurantsHere.restaurant.filter((restaurant)=>{\n     return restaurant.restaurantName.toLowerCase().includes(this.state.search) \n    //  esto pa que no se muestren todos, solo lo que buscas --> && this.state.search !== \"\"\n   \n   });\n   \n   var RestaurantName = (filteredRestaurants.map((restaurant)=>{\n     return <Link to={`Restaurant/${restaurant._id}`}><div><ul><li>{restaurant.restaurantName}</li></ul>\n       </div></Link>\n   }))\n }\n\n    return (\n      <div>\n        <h1>LISTA DE RESTAURANTES</h1>\n        <input\n        id=\"restaurantSearchBar\"\n        type=\"text\"\n        placeholder=\"Search\"\n        onChange={this.updateSearch.bind(this)}\n        value={this.state.search}/>\n       \n      {RestaurantName} \n            \n      </div>\n      \n    )\n  }\n}\n\n\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\nimport AuthService from '../../auth/AuthService';\nimport Map from '../Map/Map';\nimport AllRestaurants from '../AllRestaurants/AllRestaurants';\nimport { Redirect} from 'react-router-dom';\nimport './Profile.css';\n\n\nexport default class Profile extends Component {\n  constructor(props){\n    super(props);\n\n    this.state = { redirect: false, username: '', password: '', email: '', restaurantName: '', address: '', zipCode: '', lat: '', lng: '', user:props.user};\n    this.authService = new AuthService();\n  }\n\n  componentDidMount = () => {\n    this.loggedin()\n  }\n  \n\n  logout = () => {\n    this.authService\n      .logout()\n      .then(() => {\n      // this.setState({ redirect: true});\n      this.props.getTheUser(null)})\n  };\n\n  loggedin = () => {\n    this.authService\n      .loggedin()\n      .then((user) => {\n      console.log(\"logueado!\")\n      })\n      .catch(() => this.setState({...this.state, redirect: true}))\n  };\n  \n  render() {\n\n    if( this.state.redirect) {\n      return <Redirect to=\"/\" />\n    }\n\n    if(this.props.user){\n\n    var username = this.props.user.username\n\n    if(this.props.user.restaurant === true){\n      var restaurantProfile =(\n      <div>\n         AQUI VA EL PERFIL QUE SOLO PUEDEN VER LOS RESTAURANTES\n         <Link to={`Restaurant/${this.props.user._id}`}><button>My Restaurant</button></Link>\n         {<Map lat={this.props.user.lat} lng={this.props.user.lng}/>}\n      </div>\n      ) \n    }\n    else {\n      \n      var userProfile =(\n        <div>\n           AQUI VA EL PERFIL QUE SOLO PUEDEN VER LOS USUARIOS\n           <AllRestaurants/>\n        </div>\n        ) \n      }\n      \n    } \n    \n    return (\n      this.props.user ? (<div>\n        <h2>Hola  {username} este es tu perfil!!!!</h2>\n        <br/>\n  \n        <Link to={`edit/${this.props.user._id}`}><button>Edit my Profile</button></Link>\n       \n        <Link to={'/'}><button onClick={this.logout}>Log Out</button></Link>\n        \n        {restaurantProfile}\n        {userProfile}\n\n      </div>): (<p>\"Loading...\"</p>)\n      \n    )\n  }\n}\n","import React, { Component } from 'react';\nimport AuthService from '../../auth/AuthService';\nimport { Link, Redirect } from 'react-router-dom'; \n\n\nclass Edit extends Component {\n  constructor(){\n    super();\n    this.state = { username: '', email: '', restaurantName: '', address: '', zipCode: '', lat: '', lng: '', redirect: false};\n    this.service = new AuthService();\n    this.service.loggedin()\n    \n  }\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n    \n    const username         = this.state.username;\n    const email            = this.state.email;\n    const restaurant       = this.state.restaurant;\n    const restaurantName   = this.state.restaurantName;\n    const address          = this.state.address;\n    const zipCode          = this.state.zipCode;\n    const lat              = this.state.lat;\n    const lng              = this.state.lng;\n\n\n    this.service.edit(username, email, restaurant, restaurantName, address, zipCode, lat, lng)\n    .then( response => {\n        this.setState({\n            ...this.state,\n            username: \"\", \n            email: \"\",\n            restaurant: false,\n            restaurantName: \"\",\n            address: \"\",\n            zipCode: \"\",\n            lat: \"\",\n            lng: \"\",\n\n            redirect: true\n        });\n        this.props.getUser(response)\n\n    })\n    .catch( error => console.log(error) )\n  }\n  \n  handleChange = (event) => {  \n    const {name, value} = event.target;\n    if(name === \"restaurant\"){\n     this.setState({[name]: event.target.checked});\n    }\n    else{\n      this.setState({[name]:value});\n    }\n\n  }\n\n  render(){\n    console.log(this.props.user)\n    if(this.state && this.state.redirect) {\n      return <Redirect to=\"/profile\" />  \n    }\n    if(this.props.user){\n    if(this.props.user.restaurant === true){\n         var justForRestaurants =(\n         <div>\n          <label>Restaurant Name:</label>\n          <input name=\"restaurantName\" value={this.state.restaurantName} onChange={ e => this.handleChange(e)} />\n\n          <label>Address:</label>\n          <input name=\"address\" value={this.state.address} onChange={ e => this.handleChange(e)} />\n\n          <label>Zip Code:</label>\n          <input name=\"zipCode\" value={this.state.zipCode} onChange={ e => this.handleChange(e)} />\n         \n         </div>\n         ) \n    }}\n\n    return(\n      <div>\n\n        <form onSubmit={this.handleFormSubmit}>\n          <label>Username:</label>\n          <input type=\"text\" name=\"username\" value={this.state.username} onChange={ e => this.handleChange(e)}/>\n\n          <label>Email:</label>\n          <input name=\"email\" value={this.state.email} onChange={ e => this.handleChange(e)} />\n  \n        {justForRestaurants}\n      \n          <input type=\"submit\" value=\"Edit\" />\n        </form>\n  \n      \n  \n      </div>\n    )\n  }\n  \n}\n\nexport default Edit;\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./Components/Home/Home\"\nimport Login from './Components/Login/Login';\nimport Restaurant from './Components/Restaurant/Restaurant';\nimport Signup from './Components/Signup/Signup';\nimport Profile from './Components/Profile/Profile';\nimport AuthService from './auth/AuthService';\nimport Edit from './Components/Edit/Edit';\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    this.state = { loggedInUser: null };\n    this.authService = new AuthService();\n    this.fetchUser();\n  }\n  fetchUser = () => {\n    this.authService\n      .loggedin()\n      .then(loggedInUser => this.setState({ ...this.state, loggedInUser }));\n  };\n\n  getTheUser= (userObj) => {\n    this.setState({\n      loggedInUser: userObj\n    })\n  }\n// user={this.state.loggedInUser} --> esto es para pasar a las rutas el usuario ya cargado ok? con el props\n\n  render() {\n  if(this.state.loggedInUser){\n    \n  }\n    return (\n      <div className=\"App\">\n\n      \n        <Switch>\n          <Route exact path='/' component={Home} getUser={this.getTheUser}/>\n          <Route exact path='/login' render={() => <Login getUser={this.getTheUser}/>}/>\n          <Route exact path='/signup' render={() => <Signup getUser={this.getTheUser}/>}/>\n          <Route exact path='/profile' render={() => <Profile user={this.state.loggedInUser} getTheUser={this.getTheUser}/>}/>\n          <Route exact path='/edit/:restaurantId' render={() => <Edit user={this.state.loggedInUser} getUser={this.getTheUser}/>}/>\n          <Route exact path='/restaurant/:restaurantId' render={() => <Restaurant user={this.state.loggedInUser} getUser={this.getTheUser}/>}/>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import { Switch, Route, Link } from \"react-router-dom\";\n\nimport {BrowserRouter as Router} from 'react-router-dom' \n\n\n\n\nReactDOM.render(<Router><App /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}